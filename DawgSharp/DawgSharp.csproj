<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.2;net35;net40</TargetFrameworks>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>key.snk</AssemblyOriginatorKeyFile>
    <LangVersion>latest</LangVersion>

    <PackageId>DawgSharp</PackageId>
    <RootNamespace>DawgSharp</RootNamespace>
    <Title>An ultra-compact string dictionary</Title>
    <PackageVersion>0.0.0</PackageVersion>
    <AssemblyVersion>999.0.0.0</AssemblyVersion> <!--'999' is required for DawgSharp.Verion_1_2.Benchmark to work correctly.-->
    <FileVersion>0.0.0.0</FileVersion>
    <InformationalVersion>0.0.0.0</InformationalVersion>
    <Authors>morpher</Authors>
    <Description>
      DAWG (Directed Acyclic Word Graph) is a data structure for storing and searching large word lists while keeping your memory footprint small and lookups fast. DawgSharp is an open-source C# implementation featuring a linear time graph reduction algorithm and out-of-the-box persistence support.
      
      The Dawg class is nearly as fast as a HashSet for lookups and is much, much more memory-efficient (factors of 30x - 40x are not uncommon). In a benchmark application it held two million words while consuming only 2Mbytes of RAM. That's only one byte per word! And it's even less on disk.
      
      The Dawg class can be thought of as a read-only Dictionary&lt;string, Value&gt;: it has a ["string"] indexer and implements IEnumerable&lt;KeyValuePair&lt;string, Value&gt;&gt;. One other very useful feature of Dawg (not found in Dictionary) is the ability to quickly find all words that start with a particular prefix: dawg.MatchPrefix("star") could possibly yield "star", "starch", "start", "starting", etc.
      
      This package is provided under the terms of the GNU GPL v3. Source code and documentation are available on GitHub: https://github.com/bzaar/DawgSharp. Commercial licenses are also available at http://morpher.co.uk
    </Description>
    <Copyright>2014 - 2021 Sergey Slepov</Copyright>
    <PackageTags>DAWG;string;dictionary;lookup</PackageTags>
    <VersionSuffix>$(VersionSuffix)</VersionSuffix>
    <RepositoryUrl>https://github.com/bzaar/DawgSharp</RepositoryUrl>
    <PackageProjectUrl>https://github.com/bzaar/DawgSharp</PackageProjectUrl>
    <PackageLicenseUrl>https://github.com/bzaar/DawgSharp/blob/master/LICENSE</PackageLicenseUrl>
    <PackageIconUrl>https://github.com/bzaar/DawgSharp/blob/master/icon.png?raw=true</PackageIconUrl>
    <PackageReleaseNotes>
      - XML comments file added.
      - New method 'Dawg.GetPrefixes' for splitting prefixes off a word.
      - New method 'DawgBuilder.BuildYaleDawg' for building the optimized DAWG without having to save to it disk.
      - Support for .NET Standard 1.2 and .NET 3.5 (in addition to .NET 4.0). Apps targeting .NET 4.5+ will work with the .NET 4.0 version.
      This release only has additive API changes. The file format has not changed.
    </PackageReleaseNotes>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\DawgSharp.xml</DocumentationFile>
    <NoWarn>1591</NoWarn> <!--"Missing XML comment for publicly visible type or member."-->

    <!--See this answer: https://stackoverflow.com/a/48363059/1291717 -->
    <FrameworkPathOverride Condition="'$(TargetFramework)' == 'net35'">$(MSBuildProgramFiles32)\Reference Assemblies\Microsoft\Framework\.NETFramework\v3.5\Profile\Client</FrameworkPathOverride>
  </PropertyGroup>

</Project>
